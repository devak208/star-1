version: "3.8"

services:
  kong-database:
    image: postgres:13
    container_name: kong-database
    restart: always
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
    ports:
      - "5433:5432"
    volumes:
      - kong_db_data:/var/lib/postgresql/data

  kong-migrations:
    image: kong:latest
    command: "kong migrations bootstrap"
    restart: on-failure
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
    depends_on:
      - kong-database

  kong:
    image: kong:latest
    container_name: kong
    restart: always
    depends_on:
      - kong-migrations
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: "0.0.0.0:8001"
      KONG_PROXY_LISTEN: "0.0.0.0:8000, 0.0.0.0:8443 ssl"
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"

  kong-gui:
    image: pantsel/konga
    container_name: kong-gui
    restart: always
    environment:
      DB_ADAPTER: postgres
      DB_HOST: kong-database
      DB_USER: kong
      DB_PASSWORD: kong
      NODE_ENV: production
    ports:
      - "1337:1337"
    depends_on:
      - kong-database

  redis:
    image: redis:latest
    container_name: redis-container
    restart: always
    ports:
      - "6379:6379"

  backend:
    build: .
    container_name: backend
    restart: "always"  # Run only once
    entrypoint: ["/bin/sh", "-c", "/app/entrypoint.sh"]
    depends_on:
      - kong
      - redis

volumes:
  kong_db_data: